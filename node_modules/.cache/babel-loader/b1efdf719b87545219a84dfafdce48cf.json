{"ast":null,"code":"var _jsxFileName = \"/Users/mathiasbakken/deepwork-website/deepwork-website/src/pages/CaseStudy/components/TalkingPoint.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Link, Typography } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { useEffect, useRef } from 'react';\nimport { useStyles } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TalkingPoint = _ref => {\n  _s();\n\n  var _talkingPoint$links;\n\n  let {\n    scrollToItem,\n    observer,\n    talkingPoint,\n    hiddenTitle\n  } = _ref;\n  const ref = useRef(null);\n  const classes = useStyles();\n  useEffect(() => {\n    if (scrollToItem) {\n      var _ref$current;\n\n      (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [scrollToItem]);\n  useEffect(() => {\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      if (ref.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        observer.unobserve(ref.current);\n      }\n    };\n  }, [observer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    \"data-id\": talkingPoint.label,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"section\",\n      mb: 12,\n      children: [hiddenTitle && /*#__PURE__*/_jsxDEV(Box, {\n        mb: 3.1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: talkingPoint.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mb: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: talkingPoint.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"figure\",\n        mb: 4,\n        children: talkingPoint.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: talkingPoint.image,\n          alt: talkingPoint.label,\n          className: classes.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: (_talkingPoint$links = talkingPoint.links) === null || _talkingPoint$links === void 0 ? void 0 : _talkingPoint$links.map((link, index) => link.url ? /*#__PURE__*/_jsxDEV(Box, {\n          mr: 2,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: link.url,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: link.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TalkingPoint, \"uvQ595aPZ99164A2ZHOHZPS3AZc=\", false, function () {\n  return [useStyles];\n});\n\n_c = TalkingPoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"TalkingPoint\");","map":{"version":3,"sources":["/Users/mathiasbakken/deepwork-website/deepwork-website/src/pages/CaseStudy/components/TalkingPoint.tsx"],"names":["Box","Link","Typography","ChevronRightIcon","useEffect","useRef","useStyles","TalkingPoint","scrollToItem","observer","talkingPoint","hiddenTitle","ref","classes","current","scrollIntoView","behavior","observe","unobserve","label","description","image","links","map","link","index","url"],"mappings":"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","sourcesContent":["import { Box, Link, Typography } from '@material-ui/core'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport { FC, useEffect, useRef } from 'react'\nimport { ITalkingPoint } from '../../CaseStudies/interfaces'\nimport { useStyles } from './styles'\n\ninterface Props {\n  scrollToItem: boolean\n  observer: any\n  talkingPoint: ITalkingPoint\n  hiddenTitle?: boolean\n  hiddenDescription?: boolean\n}\nexport const TalkingPoint: FC<Props> = ({ scrollToItem, observer, talkingPoint, hiddenTitle }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (scrollToItem) {\n      ref.current?.scrollIntoView({ behavior: 'smooth' })\n    }\n  }, [scrollToItem])\n\n  useEffect(() => {\n    if (ref.current) {\n      observer.observe(ref.current)\n    }\n    return () => {\n      if (ref.current) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        observer.unobserve(ref.current)\n      }\n    }\n  }, [observer])\n\n  return (\n    <div ref={ref} data-id={talkingPoint.label}>\n      <Box component=\"section\" mb={12}>\n        {hiddenTitle && (\n          <Box mb={3.1}>\n            <Typography variant=\"h4\">{talkingPoint.label}</Typography>\n          </Box>\n        )}\n        <Box mb={4}>\n          <Typography variant=\"body1\">{talkingPoint.description}</Typography>\n        </Box>\n        <Box component=\"figure\" mb={4}>\n          {talkingPoint.image && <img src={talkingPoint.image} alt={talkingPoint.label} className={classes.image} />}\n        </Box>\n        <Box display=\"flex\">\n          {talkingPoint.links?.map((link, index) =>\n            link.url ? (\n              <Box mr={2} key={index}>\n                <Link href={link.url}>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <span>{link.label}</span> <ChevronRightIcon />\n                  </Box>\n                </Link>\n              </Box>\n            ) : null\n          )}\n        </Box>\n      </Box>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}