{"ast":null,"code":"var _jsxFileName = \"/Users/mathiasbakken/deepwork-website/deepwork-website/src/components/PageHeader/PageHeader.tsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router-dom';\nimport { RoutePaths } from '../../routePaths';\nimport { Box, Button, createStyles, makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  wrapper: {\n    maxWidth: '80%',\n    marginBottom: theme.spacing(10.5),\n    [theme.breakpoints.down('lg')]: {\n      maxWidth: '60%'\n    },\n    [theme.breakpoints.down('sm')]: {\n      maxWidth: '100%'\n    }\n  },\n  preffix: {\n    textTransform: 'uppercase',\n    fontWeight: 600,\n    fontSize: theme.spacing(2),\n    lineHeight: 1.5,\n    letterSpacing: 1\n  },\n  title: {\n    marginBottom: theme.spacing(5.25),\n    [theme.breakpoints.down('md')]: {\n      fontSize: 62\n    },\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 52\n    }\n  },\n  subtitle: {\n    marginBottom: theme.spacing(6),\n    maxWidth: '810px'\n  },\n  buttonWrapper: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      '& > button': {\n        width: '100%'\n      }\n    }\n  },\n  button: {\n    padding: theme.spacing(1.5, 2.75),\n    marginRight: theme.spacing(2.5),\n    fontSize: theme.spacing(2.25),\n    lineHeight: 1.333,\n    fontWeight: 600,\n    textTransform: 'capitalize',\n    [theme.breakpoints.down('md')]: {\n      padding: theme.spacing(1, 3),\n      fontSize: theme.spacing(2.5)\n    },\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(0.8, 1.5),\n      fontSize: theme.spacing(2.25),\n      marginBottom: theme.spacing(2)\n    }\n  },\n  span: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}), {\n  index: 999\n});\nexport const PageHeader = _ref => {\n  _s();\n\n  let {\n    title,\n    buttons,\n    preffix,\n    subtitle\n  } = _ref;\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleNavigate = item => () => {\n    var _item$link, _item$link2;\n\n    if (((_item$link = item.link) === null || _item$link === void 0 ? void 0 : _item$link.includes('http')) || ((_item$link2 = item.link) === null || _item$link2 === void 0 ? void 0 : _item$link2.includes('https'))) {\n      window.open(item.link, '__blank');\n      return;\n    }\n\n    if (item.link && (typeof item.link === 'string' || Object.values(RoutePaths).includes(item.link))) {\n      history.push(item.link);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [preffix && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      className: classes.preffix,\n      children: preffix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h1\",\n      component: \"div\",\n      classes: {\n        root: classes.title\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), subtitle && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      classes: {\n        root: classes.subtitle\n      },\n      children: subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.buttonWrapper,\n      children: buttons === null || buttons === void 0 ? void 0 : buttons.map((item, index) => {\n        var _item$type;\n\n        return /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.button,\n          variant: (_item$type = item.type) !== null && _item$type !== void 0 ? _item$type : 'contained',\n          color: \"primary\",\n          onClick: item.onClick ? item.onClick : handleNavigate(item),\n          children: [item.title, item.icon && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.span,\n            children: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 27\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PageHeader, \"BdTvy0NwxfXtm2+rVFU+2ByCBYw=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = PageHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageHeader\");","map":{"version":3,"sources":["/Users/mathiasbakken/deepwork-website/deepwork-website/src/components/PageHeader/PageHeader.tsx"],"names":["useHistory","RoutePaths","Box","Button","createStyles","makeStyles","Typography","useStyles","theme","wrapper","maxWidth","marginBottom","spacing","breakpoints","down","preffix","textTransform","fontWeight","fontSize","lineHeight","letterSpacing","title","subtitle","buttonWrapper","display","flexDirection","width","button","padding","marginRight","span","alignItems","index","PageHeader","buttons","history","classes","handleNavigate","item","link","includes","window","open","Object","values","push","root","map","type","onClick","icon"],"mappings":"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","sourcesContent":["import { FC, ReactNode } from 'react'\nimport { SharableButtons } from '../../shared/interfaces/sharableButtons'\nimport { useHistory } from 'react-router-dom'\nimport { RoutePaths } from '../../routePaths'\nimport { Box, Button, createStyles, makeStyles, Theme, Typography } from '@material-ui/core'\n\ninterface Props {\n  preffix?: string | ReactNode\n  title: string | ReactNode\n  subtitle?: string | ReactNode\n  buttons?: SharableButtons[]\n}\n\nconst useStyles = makeStyles(\n  (theme: Theme) =>\n    createStyles({\n      wrapper: {\n        maxWidth: '80%',\n        marginBottom: theme.spacing(10.5),\n        [theme.breakpoints.down('lg')]: {\n          maxWidth: '60%',\n        },\n        [theme.breakpoints.down('sm')]: {\n          maxWidth: '100%',\n        },\n      },\n      preffix: {\n        textTransform: 'uppercase',\n        fontWeight: 600,\n        fontSize: theme.spacing(2),\n        lineHeight: 1.5,\n        letterSpacing: 1,\n      },\n      title: {\n        marginBottom: theme.spacing(5.25),\n        [theme.breakpoints.down('md')]: {\n          fontSize: 62,\n        },\n        [theme.breakpoints.down('sm')]: {\n          fontSize: 52,\n        },\n      },\n      subtitle: {\n        marginBottom: theme.spacing(6),\n        maxWidth: '810px',\n      },\n      buttonWrapper: {\n        [theme.breakpoints.down('sm')]: {\n          display: 'flex',\n          flexDirection: 'column',\n          '& > button': {\n            width: '100%',\n          },\n        },\n      },\n      button: {\n        padding: theme.spacing(1.5, 2.75),\n        marginRight: theme.spacing(2.5),\n        fontSize: theme.spacing(2.25),\n        lineHeight: 1.333,\n        fontWeight: 600,\n        textTransform: 'capitalize',\n        [theme.breakpoints.down('md')]: {\n          padding: theme.spacing(1, 3),\n          fontSize: theme.spacing(2.5),\n        },\n        [theme.breakpoints.down('sm')]: {\n          padding: theme.spacing(0.8, 1.5),\n          fontSize: theme.spacing(2.25),\n          marginBottom: theme.spacing(2),\n        },\n      },\n      span: {\n        display: 'flex',\n        alignItems: 'center',\n      },\n    }),\n  { index: 999 }\n)\n\nexport const PageHeader: FC<Props> = ({ title, buttons, preffix, subtitle }) => {\n  const history = useHistory()\n  const classes = useStyles()\n\n  const handleNavigate = (item: SharableButtons) => () => {\n    if (item.link?.includes('http') || item.link?.includes('https')) {\n      window.open(item.link, '__blank')\n      return\n    }\n    if (item.link && (typeof item.link === 'string' || Object.values(RoutePaths).includes(item.link))) {\n      history.push(item.link)\n    }\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      {preffix && (\n        <Typography variant=\"caption\" className={classes.preffix}>\n          {preffix}\n        </Typography>\n      )}\n      <Typography variant=\"h1\" component=\"div\" classes={{ root: classes.title }}>\n        {title}\n      </Typography>\n      {subtitle && (\n        <Typography variant=\"subtitle1\" classes={{ root: classes.subtitle }}>\n          {subtitle}\n        </Typography>\n      )}\n      <Box className={classes.buttonWrapper}>\n        {buttons?.map((item, index) => (\n          <Button\n            key={index}\n            className={classes.button}\n            variant={item.type ?? 'contained'}\n            color=\"primary\"\n            onClick={item.onClick ? item.onClick : handleNavigate(item)}>\n            {item.title}\n            {item.icon && <span className={classes.span}>{item.icon}</span>}\n          </Button>\n        ))}\n      </Box>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}